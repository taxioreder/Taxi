// <auto-generated />
using System;
using DBAplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBAplication.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190626000805_Init03062506")]
    partial class Init03062506
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DBAplication.Model.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyAuthorized");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DBAplication.Model.Driver", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FullName");

                    b.Property<bool>("IsWork");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Token");

                    b.Property<string>("TokenShope");

                    b.Property<string>("ZipCod");

                    b.Property<int?>("geolocationsID");

                    b.HasKey("ID");

                    b.HasIndex("geolocationsID");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("DBAplication.Model.Geolocations", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.HasKey("ID");

                    b.ToTable("Geolocations");
                });

            modelBuilder.Entity("DBAplication.Model.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<string>("CurrentOrder");

                    b.Property<string>("CurrentStatus");

                    b.Property<string>("Date");

                    b.Property<int?>("DriverID");

                    b.Property<string>("FromAddress");

                    b.Property<int>("FromZip");

                    b.Property<bool>("IsVisableAccept");

                    b.Property<string>("Milisse");

                    b.Property<string>("NameCustomer");

                    b.Property<string>("NoName");

                    b.Property<string>("NoName1");

                    b.Property<string>("NoName2");

                    b.Property<string>("NoName3");

                    b.Property<string>("NoName4");

                    b.Property<string>("NoName5");

                    b.Property<string>("NoName6");

                    b.Property<string>("Phone");

                    b.Property<string>("Price");

                    b.Property<string>("TimeOfAppointment");

                    b.Property<string>("TimeOfPickup");

                    b.Property<string>("ToAddress");

                    b.Property<int>("ToZip");

                    b.Property<bool>("isAccept");

                    b.HasKey("ID");

                    b.HasIndex("DriverID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DBAplication.Model.Driver", b =>
                {
                    b.HasOne("DBAplication.Model.Geolocations", "geolocations")
                        .WithMany()
                        .HasForeignKey("geolocationsID");
                });

            modelBuilder.Entity("DBAplication.Model.Order", b =>
                {
                    b.HasOne("DBAplication.Model.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverID");
                });
#pragma warning restore 612, 618
        }
    }
}
