<div class="body">
    <div style="display:flex;">
        <input class="btnCreateoOrder" type="button" value="Create Order" onClick='location.href="/Dashbord/Order/Creat"' />
        <label class="btnCreateoOrder">
            <input id="fileExel" type="file" onchange="CheckSelectExel(this)" />
            Load Exel file
        </label>
        <span id="loadExel" style="color:green; margin:10px; visibility:hidden;">Plese waite? Exel load....</span>
        <span id="errorExel" style="color:red; margin:10px; visibility:hidden;">File is not Excel or file is not valid</span>
    </div>
    <nav>
        <input class="btnSt" type="button" value="New load" onclick="window.location.href='@Url.Action("NewLoad", "Dashbord")';" />
        <input class="btnSt" type="button" value="Assigned" onclick="window.location.href='@Url.Action("Assigned", "Dashbord")';" />
        <input class="btnSt activeBtn" type="button" value="Picked up" onclick="window.location.href='@Url.Action("Pickedup", "Dashbord")';" />
        <input class="btnSt" type="button" value="Delivered" onclick="window.location.href='@Url.Action("Delivered", "Dashbord")';" />
        <input class="btnSt" type="button" value="Paid" onclick="window.location.href='@Url.Action("Paid", "Dashbord")';" />
        <input class="btnSt" type="button" value="Archived" onclick="window.location.href='@Url.Action("Archived", "Dashbord")';" />
        <input class="btnSt" type="button" value="Deleted" onclick="window.location.href='@Url.Action("Deleted", "Dashbord")';" />
    </nav>
    <div class="filling">
        @for (int i = 0; i < ViewBag.Orders.Count; i++)
        {
            <div class="orders">
                <input class="btnId" type="button" value="Name Customer: @ViewBag.Orders[i].NameCustomer">
                <span class="stPData">$@ViewBag.Orders[i].Price</span>
                <p class="stPData">
                    @ViewBag.Orders[i].Milisse Milles, Pickup time @ViewBag.Orders[i].Date @ViewBag.Orders[i].TimeOfPickup ±5 Min
                    <br />
                    Phone: @ViewBag.Orders[i].Phone
                </p>
                <div class="bodyBlock">
                    <div class="blockData">
                        <h5 class="headPH4">ORIGIN</h5>
                        <p class="stPData">
                            @ViewBag.Orders[i].FromAddress
                        </p>
                    </div>
                    <div class="blockData">
                        <h5 class="headPH4">DESTINATION</h5>
                        <p class="stPData">
                            @ViewBag.Orders[i].ToAddress
                        </p>
                    </div>
                    <div class="blockBtn">
                        <a class="btnId" style="width:50px" href="/Dashbord/Order/Edit?id=@ViewBag.Orders[i].ID">Edit</a>
                        <select onchange="SelectAssining(this.options[this.selectedIndex].value)" class="btnId" style="width:100px">
                            <option value="">Reassang</option>
                            <option value="@ViewBag.Orders[i].ID,Unassign">Unassign</option>
                            @for (int j = 0; j < ViewBag.Drivers.Count; j++)
                            {
                                <option value="@ViewBag.Orders[i].ID,@ViewBag.Drivers[j].ID">@ViewBag.Drivers[j].FullName</option>
                            }
                        </select>
                        <a class="btnId" style="width:60px" href="DeletedOrder?id=@ViewBag.Orders[i].ID">Deleted</a>
                        <div style="display:flex">
                            <p class="stPData">Assigned to @ViewBag.Orders[i].Driverr.FullName</p>
                            <p class="stPData">Phone: @ViewBag.Orders[i].Driverr.PhoneNumber</p>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (ViewBag.count != 1)
        {
            <div class="center">
                <div class="pagination">
                    @for (int y = 1; y <= ViewBag.count; y++)
                    {
                        <a href="?page=@y">@y</a>
                    }
                </div>
            </div>
        }
    </div>
</div>
<script>
    function CheckSelectExel(fille) {
        loadExel.style.visibility = "visible";
        let pref = fille.files[0].name.substr(fille.files[0].name.lastIndexOf(".") + 1);
        if (pref != "xlsx") {
            loadExel.style.visibility = "hidden";
            errorExel.style.visibility = "visible";
        }
        else {
            let url = "@ViewBag.BaseUrl/Dashbord/SaveFile";
            let xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function () {
                if (xmlHttp.status == 200) {
                    delay(500);
                    window.location.reload();
                }
                else if (xmlHttp.status == 0)
                {

                }
                else {
                    loadExel.style.visibility = "hidden";
                    errorExel.style.visibility = "visible";
                }
            }
            let formData = new FormData();
            formData.append("uploadedFile", fille.files[0]);
            xmlHttp.open("POST", url, true);
            xmlHttp.send(formData);

        }
    }

    function delay(ms) {
        var cur_d = new Date();
        var cur_ticks = cur_d.getTime();
        var ms_passed = 0;
        while(ms_passed < ms) {
            var d = new Date();
            var ticks = d.getTime();
            ms_passed = ticks - cur_ticks;
        }
    }

   function SelectAssining(idOrderAndIdDriver) {
        var statusResponse;
        if (idOrderAndIdDriver.split(',')[1] == "Unassign") {
            let url = "@ViewBag.BaseUrl/Dashbord/Unassign";
            let xmlHttp = new XMLHttpRequest();
            let idOrder = idOrderAndIdDriver.split(',')[0];
            var body = 'idOrder=' + encodeURIComponent(idOrder);
            xmlHttp.open("POST", url, false);
            xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xmlHttp.send(body);
            statusResponse = xmlHttp.responseText;
        }
        else if (idOrderAndIdDriver != "") {
            let idOrder = idOrderAndIdDriver.split(',')[0];
            let idDriver = idOrderAndIdDriver.split(',')[1];
            let url = "@ViewBag.BaseUrl/Dashbord/Assign";
            let xmlHttp = new XMLHttpRequest();
            var body = 'idOrder=' + encodeURIComponent(idOrder) +
                '&idDriver=' + encodeURIComponent(idDriver);
            xmlHttp.open("POST", url, false);
            xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xmlHttp.send(body);
            statusResponse = xmlHttp.responseText;
        }

        if (statusResponse == "True") {
            window.location.reload();
        }
    }
</script>
<style>
    * {
        margin: 0px;
    }

    .center {
        text-align: end;
        margin: 10px;
        margin-right: 70px;
        font-family: -apple-system, BlinkMacSystemFont, sans-serif;
    }

    .pagination {
        display: inline-block;
    }

        .pagination a {
            color: #d97e2b;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
            border: none;
            margin: 0 4px;
        }

            .pagination a:hover:not(.active) {
                background-color: #ddd;
            }

    .blockData {
        margin-right: 30px;
        width: 30%;
    }

    .headPH4 {
        margin: 7px;
        font-size: 18px;
        color: #ad7d52;
    }

    .btnCreateoOrder {
        color: white;
        background-color: darkgray;
        display: inline-block;
        padding: 7px;
        font-size: 12px;
        font-weight: 400;
        text-align: center;
        border: 2px solid;
        border-radius: 7px;
        margin-bottom: 10px;
    }

        .btnCreateoOrder:hover {
            transition: 0.3s;
            background-color: rgb(51, 51, 51);
        }

    .btnId {
        color: rgba(45,45,45,0.88);
        background: none;
        display: inline-block;
        padding: 10px;
        font-size: 16px;
        font-weight: 400;
        text-align: center;
        border: 1px solid;
        border-radius: 4px;
    }

        .btnId:hover {
            background-color: rgba(45,45,45,0.98);
            color: white;
            transition: 0.5s;
        }

    .stPData {
        margin: 5px;
        color: #421f0e;
        font-size: 15px;
    }

    .orders {
        width: 15%;
        border: solid;
        border-width: 1px;
        border-color: rgba(51, 51, 51, 0.3);
        padding: 20px;
        margin-bottom: 5px;
    }

    .body {
        margin-top: 30px;
        margin-left: 5px;
        margin-right: 5px;
    }

    .btnSt {
        margin: 0px;
        border: none;
        width: 120px;
        height: 40px;
        background-color: white;
        font-size: 20px;
        color: rgb(51, 51, 51);
        border-color: rgba(51, 51, 51, 1);
    }

    .activeBtn {
        border-radius: 1px;
        border-top: solid;
        border-right: solid;
        border-left: solid;
        border-width: 1.3px;
        position: relative;
        top: 2px;
        border-color: rgba(51, 51, 51, 0.3);
    }

    .btnSt:hover {
        background-color: rgba(228, 228, 228, 0.75);
        transition: 0.3s;
    }

    .filling {
        width: 100%;
        height: 100px;
        border-top: solid;
        border-width: 1px;
        border-color: rgba(51, 51, 51, 0.3);
        justify-content:space-between;
        flex-wrap:wrap;
    }

    input[type="file"] {
        display: none;
    }
</style>