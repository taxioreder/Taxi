<div class="body">
    <div style="display:flex;">
        <input class="btnCreateoOrder" type="button" value="Create Order" onClick='location.href="/Dashbord/Order/Creat"' />
        <label class="btnCreateoOrder">
            <input id="fileExel" type="file" onchange="CheckSelectExel(this)" />
            Load Exel file
        </label>
        <span id="loadExel" style="color:green; margin:10px; visibility:hidden;">Plese waite? Exel load....</span>
        <span id="errorExel" style="color:red; margin:10px; visibility:hidden;">File is not Excel or file is not valid</span>
        <select onchange="SelectAssining(this.options[this.selectedIndex].value)" class="" style="width:100px">
            <option value="">Assign</option>
            @for (int j = 0; j < ViewBag.Drivers.Count; j++)
            {
                <option value="@ViewBag.Drivers[j].ID">@ViewBag.Drivers[j].FullName</option>
            }
        </select>
    </div>
    <nav>
        <input class="btnSt activeBtn" type="button" value="New load" onclick="window.location.href='@Url.Action("NewLoad", "Dashbord")';" />
        <input class="btnSt" type="button" value="Assigned" onclick="window.location.href='@Url.Action("Assigned", "Dashbord")';" />
        <input class="btnSt" type="button" value="Picked up" onclick="window.location.href='@Url.Action("Pickedup", "Dashbord")';" />
        <input class="btnSt" type="button" value="Delivered" onclick="window.location.href='@Url.Action("Delivered", "Dashbord")';" />
        <input class="btnSt" type="button" value="Archived" onclick="window.location.href='@Url.Action("Archived", "Dashbord")';" />
        <input class="btnSt" type="button" value="Deleted" onclick="window.location.href='@Url.Action("Deleted", "Dashbord")';" />
    </nav>
    <div class="filling">
        <table class="tegTable">
            <tr>
                <th>Name Customer</th>
                <th>Price</th>
                <th>Miless</th>
                <th>Pickup time</th>
                <th>Phone</th>
                <th>From Address</th>
                <th>To Address</th>
                <th>Control</th>
            </tr>
            @for (int i = 0; i < ViewBag.Orders.Count; i++)
            {
        <tr id="@ViewBag.Orders[i].ID">
            
            <td class="orderTd orderTdBorderStart"><span>@ViewBag.Orders[i].NameCustomer</span></td>
            <td class="orderTd orderTdBorderSrandart"><span>$@ViewBag.Orders[i].Price</span></td>
            <td class="orderTd orderTdBorderSrandart"><span>@ViewBag.Orders[i].Milisse Milles</span></td>
            <td class="orderTd orderTdBorderSrandart"><span>@ViewBag.Orders[i].Date @ViewBag.Orders[i].TimeOfPickup ±5 Min</span></td>
            <td class="orderTd orderTdBorderSrandart"><span>@ViewBag.Orders[i].Phone</span></td>
            <td class="orderTd orderTdBorderSrandart"><span>@ViewBag.Orders[i].FromAddress</span></td>
            <td class="orderTd orderTdBorderSrandart"><span>@ViewBag.Orders[i].ToAddress</span></td>
            <td class="orderTd orderTdBorderEnd">
                <a class="" style="width:50px" href="/Dashbord/Order/Edit?id=@ViewBag.Orders[i].ID">Edit</a>
                <a class="" style="width:60px" href="DeletedOrder?id=@ViewBag.Orders[i].ID">Deleted</a>
            </td>
        </tr>
            }
        </table>
            @if (ViewBag.count != 1)
            {
                <div class="center">
                    <div class="pagination">
                        @for (int y = 1; y <= ViewBag.count; y++)
                        {
                            <a href="?page=@y">@y</a>
                        }
                    </div>
                </div>
            }
</div>
</div>
<script>
    function CheckSelectExel(fille) {
        loadExel.style.visibility = "visible";
        let pref = fille.files[0].name.substr(fille.files[0].name.lastIndexOf(".") + 1);
        if (pref != "xlsx") {
            loadExel.style.visibility = "hidden";
            errorExel.style.visibility = "visible";
        }
        else {
            let url = "@ViewBag.BaseUrl/Dashbord/SaveFile";
            let xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function () { 
                if (xmlHttp.status == 200) {
                    delay(500);
                    window.location.reload();
                }
                else if (xmlHttp.status == 0)
                {

                }
                else {
                    loadExel.style.visibility = "hidden";
                    errorExel.style.visibility = "visible";
                }
            }
            let formData = new FormData();
            formData.append("uploadedFile", fille.files[0]);
            xmlHttp.open("POST", url, true);
            xmlHttp.send(formData);
             
        }
    }

    function delay(ms) {
        var cur_d = new Date();
        var cur_ticks = cur_d.getTime();
        var ms_passed = 0;
        while(ms_passed < ms) {
            var d = new Date(); 
            var ticks = d.getTime();
            ms_passed = ticks - cur_ticks;
        }
    }

    function SelectAssining(idOrderAndIdDriver) {
        if (idOrderAndIdDriver != "") {
            let idDriver = idOrderAndIdDriver;
            document.location.replace("@ViewBag.BaseUrl/Dashbord/Orders/Assigne?idDriver="+idDriver);
        }
        @*let statusResponse;
        if (idOrderAndIdDriver != "") {
            let idOrder = idOrderAndIdDriver.split(',')[0];
            let idDriver = idOrderAndIdDriver.split(',')[1];
            let url = "@ViewBag.BaseUrl/Dashbord/Assign";
            let xmlHttp = new XMLHttpRequest();
            var body = 'idOrder=' + encodeURIComponent(idOrder) +
                '&idDriver=' + encodeURIComponent(idDriver);
            xmlHttp.open("POST", url, false);
            xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xmlHttp.send(body);
            statusResponse = xmlHttp.responseText;
        }

        if (statusResponse == "True") {
            window.location.reload();
        }*@
    }
</script>
<style>
    * {
        margin: 0px;
    }
    
    tr:nth-child(odd) { background-color: rgba(181, 181, 181, 0.28); }

    .orderTd {
        height: 30px;
        vertical-align: central; 
        text-align: center; 
        height: 40px; 
        padding: 2px;
    }

    .orderTdBorderEnd {
        border-left: 1px solid rgba(172, 172, 172, 0.45);
        border-top: 1px solid rgba(172, 172, 172, 0.45);
        border-bottom: 1px solid rgba(172, 172, 172, 0.45);
    }
    
    .orderTdBorderStart {
        border-right: 1px solid rgba(172, 172, 172, 0.45);
        border-top: 1px solid rgba(172, 172, 172, 0.45);
        border-bottom: 1px solid rgba(172, 172, 172, 0.45);
    }

    .orderTdBorderSrandart {
        border: 1px solid rgba(172, 172, 172, 0.45);
    }

    .tegTable {
        width:98%;
        border-collapse: collapse;
    }

    .btnCreateoOrder {
        color: white;
        background-color: darkgray;
        display: inline-block;
        padding: 10px;
        font-size: 14px;
        font-weight: 400;
        text-align: center;
        border: 2px solid;
        border-radius: 7px;
        margin-bottom: 10px;
    }

        .btnCreateoOrder:hover {
            transition: 0.3s;
            background-color: rgb(51, 51, 51);
        }

    .body {
        margin-top: 30px;
        margin-left: 5px;
        margin-right: 5px;
    }

    .btnSt {
        margin: 0px;
        border: none;
        width: 120px;
        height: 40px;
        background-color: white;
        font-size: 20px;
        color: rgb(51, 51, 51);
        border-color: rgba(51, 51, 51, 1);
    }

    .activeBtn {
        border-radius: 1px;
        border-top: solid;
        border-right: solid;
        border-left: solid;
        border-width: 1.3px;
        position: relative;
        top: 2px;
        border-color: rgba(51, 51, 51, 0.3);
    }

    .filling {
        width: 100%;
        height: 100px;
        border-top: solid;
        border-width: 1px;
        border-color: rgba(51, 51, 51, 0.3);
    }
    
    input[type="file"] {
        display: none;
    }

</style>