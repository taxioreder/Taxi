<div class="body">
    <input type="text" id="idriver" style="display:none;" value="@ViewBag.Driver.FullName" />
    <span style="font-size:20px;margin:5px;">Assigne for @ViewBag.Driver.FullName</span>
    <a class="btnSave" href="SaveOrderMobile">Save</a>
    <div class="orderMobile">
        <div id="orders" class="content">

        </div>
        <div id="points" class="content">

        </div>
    </div>
    <div class="filling">
        <table class="tegTable" id="table">
            <tr>
                <th>Name Customer</th>
                <th>Price</th>
                <th>Miless</th>
                <th>Pickup time</th>
                <th>Phone</th>
                <th>From Address</th>
                <th>To Address</th>
                <th>Control</th>
            </tr>
        </table>
    </div>
</div>
<script>
    function InitOrder() {
        let order;
        let xhr = new XMLHttpRequest();
        let body = "idDriver=@ViewBag.Driver.ID";
        xhr.open('POST', '@ViewBag.BaseUrl/Dashbord/Orders/Init', true);
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhr.send(body);
        xhr.onreadystatechange = function () {
            if (xhr.readyState != 4) return;
            if (xhr.status == 200) {
                order = JSON.parse(xhr.responseText);
                for (let i = 0; i < order.length; i++)
                {
                    let tr = document.createElement("tr");
                    tr.id = order[i].ID;
                    let td = document.createElement("td");
                    td.className = "orderTd orderTdBorderStart";
                    let span = document.createElement("span");
                    span.textContent = order[i].NameCustomer;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Price;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Milisse;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Date + " " + order[i].TimeOfPickup;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Phone;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].FromAddress;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].ToAddress;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderEnd";
                    let btn = document.createElement("button");
                    btn.textContent = "Add";
                    btn.value = order[i].ID;
                    btn.onclick = AddOrder;
                    td.appendChild(btn);
                    tr.appendChild(td);

                    table.appendChild(tr);
                }
            }
        }
    }

    function AddOrder(elBtn) {
        let order;
        let tr = document.getElementById("table").getElementsByTagName("tr");
        while(tr.length > 1){
            tr[1].parentNode.removeChild(tr[1]);
        }
        let idOrder = elBtn.currentTarget.value;
        let xhr = new XMLHttpRequest();
        let body = "idDriver=@ViewBag.Driver.ID&idOrder="+idOrder;
        xhr.open('POST', '@ViewBag.BaseUrl/Dashbord/Orders/InitInsert', true);
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhr.send(body);
         xhr.onreadystatechange = function () {
            if (xhr.readyState != 4) return;
            if (xhr.status == 200) {
                order = JSON.parse(xhr.responseText);
                SetOrderMobile()
                for (let i = 0; i < order.length; i++)
                {
                    let tr = document.createElement("tr");
                    tr.id = order[i].ID;
                    let td = document.createElement("td");
                    td.className = "orderTd orderTdBorderStart";
                    let span = document.createElement("span");
                    span.textContent = order[i].NameCustomer;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Price;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Milisse;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Date + " " + order[i].TimeOfPickup;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].Phone;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].FromAddress;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderSrandart";
                    span = document.createElement("span");
                    span.textContent = order[i].ToAddress;
                    td.appendChild(span);
                    tr.appendChild(td);

                    td = document.createElement("td");
                    td.className = "orderTd orderTdBorderEnd";
                    let btn = document.createElement("button");
                    btn.textContent = "Add";
                    btn.value = order[i].ID;
                    btn.onclick = AddOrder;
                    td.appendChild(btn);
                    tr.appendChild(td);

                    table.appendChild(tr);
                }
            }
        }
    }

    function SetOrderMobile() {
        let orderMobile;
        let xhr = new XMLHttpRequest();
        xhr.open('POST', '@ViewBag.BaseUrl/Dashbord/Orders/GetOrderMobile', true);
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhr.send();
        xhr.onreadystatechange = function () {
            if (xhr.readyState != 4) return;
            if (xhr.status == 200) {
                orderMobile = JSON.parse(xhr.responseText);
                SetBlockPoint(orderMobile.OnePointForAddressOrders);
                SetBlockOrder(orderMobile.Orders);
            }
        }
    }

    function SetBlockPoint(point) {
        let block = document.getElementById("points");
        while (block.children.length > 0) {
            block.children[0].parentNode.removeChild(block.children[0]);
        }
        for (let i = 0; i < point.length; i++) {
            let newElP = document.createElement("P");
            let line = document.createElement("hr");
            let newElH4 = document.createElement("h4");
            newElH4.textContent = point[i].Address + " " +point[i].PTime;
            newElP.appendChild(newElH4);
            newElP.style.margin = "10px";
            block.appendChild(newElP);
            block.appendChild(line);
        }
    }

    function SetBlockOrder(order) {
         let block = document.getElementById("orders");
        while (block.children.length > 0) {
            block.children[0].parentNode.removeChild(block.children[0]);
        }
        for (let i = 0; i < order.length; i++) {
            let newElDiv = document.createElement("div");
            let newElP = document.createElement("P");
            let newElPFromA = document.createElement("P");
            let newElPToA = document.createElement("P");
            let line = document.createElement("hr");
            let newElH4 = document.createElement("h4");
            newElH4.textContent = order[i].NameCustomer + " " + order[i].Date;
            newElPFromA.textContent = order[i].FromAddress + " " + order[i].TimeOfPickup;
            newElPToA.textContent = order[i].ToAddress + " " + order[i].TimeOfAppointment;
            newElP.appendChild(newElH4);
            newElDiv.appendChild(newElP);
            newElDiv.appendChild(newElPFromA);
            newElDiv.appendChild(newElPToA);
            newElDiv.style.margin = "10px";

            block.appendChild(newElDiv);
            block.appendChild(line);
        }
    }

    InitOrder();
</script>
<style>
    * {
        margin: 0px;
    }

    .btnSave {
        color: rgba(45,45,45,0.88);
        background: none;
        display: inline-block;
        padding: 7px;
        font-size: 16px;
        font-weight: 400;
        text-align: center;
        border: 1px solid;
        border-radius: 4px;
        width: 130px;
    }

    btnSave:hover {
        background-color: rgba(45,45,45,0.98);
        transition: 0.5s;
    }

    .body {
        margin: 20px;
    }

    .orderMobile {
        display: flex;
        justify-content: space-between;
    }

    .content {
        width: 45%;
        margin: 5px;
        height: 200px;
        border-width: 1px;
        border-color: black;
        border-style: solid;
        overflow: scroll;
    }

    .filling {
        width: 100%;
        height: 100px;
        border-top: solid;
        border-width: 1px;
        border-color: rgba(51, 51, 51, 0.3);
    }

    .tegTable {
        width: 98%;
        border-collapse: collapse;
    }

    .orderTd {
        height: 30px;
        vertical-align: central;
        text-align: center;
        height: 40px;
        padding: 2px;
    }

    .orderTdBorderEnd {
        border-left: 1px solid rgba(172, 172, 172, 0.45);
        border-top: 1px solid rgba(172, 172, 172, 0.45);
        border-bottom: 1px solid rgba(172, 172, 172, 0.45);
    }

    .orderTdBorderStart {
        border-right: 1px solid rgba(172, 172, 172, 0.45);
        border-top: 1px solid rgba(172, 172, 172, 0.45);
        border-bottom: 1px solid rgba(172, 172, 172, 0.45);
    }

    .orderTdBorderSrandart {
        border: 1px solid rgba(172, 172, 172, 0.45);
    }

    tr:nth-child(odd) {
        background-color: rgba(181, 181, 181, 0.28);
    }
</style>